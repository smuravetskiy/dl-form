<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta id="viewport" name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Open Monument Map</title>
    <style>
        label {
            display: block;
        }
    </style>
</head>

<body>
    <h1>Open Monument Map</h1>
    <h2>Add new Monument</h2>
    <form id="addMonument">
        <label>Name
            <input type="text" id="name" name="name">
        </label>
        <label>Description
            <input type="text" id="description" name="description">
        </label>
        <label>Address
            <input type="text" id="address" name="address">
        </label>
        <label>Date
            <input type="date" id="date" name="date">
        </label>
        <label>Monument View
            <input type="text" id="monumentView" name="monumentView">
        </label>
        <label>Registry Number
            <input type="text" id="registryNumber" name="registryNumber">
        </label>
        <button type="submit">Add</button>
        <button type="reset">Reset</button>
    </form>
    <h4>Items:</h4>
    <table id="list">
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Address</th>
            <th>Date</th>
            <th>Monument View</th>
            <th>Registry Number</th>
        </tr>
    </table>
</body>

<script>
    (function () {
        const table = document.getElementById("list")
        const form = document.getElementById("addMonument");
        let editingItem = null

        form.addEventListener("submit", onEventSubmit);
        form.addEventListener("reset", resetForm)

        table.addEventListener('click', function (event) {
            if (event.target.className === 'delete') {
                deleteItem(event.target.dataset.id)
            }
            if (event.target.className === 'edit') {
                editItem(event.target.dataset.id)
            }
        })

        fetch('/api/monuments')
            .then(function (response) {
                const data = response.json()
                if (response.ok) {
                    return data
                } else {
                    throw new Error(data.message);
                }
            })
            .then(function (items) {
                for (i = 0; i < items.length; i++) {
                    addMonument(items[i])
                }
            })
            .catch(function (err) {
                console.error(err)
            })

        function monumentTemplate(item) {
            return `
                <td>${item.name}</td>
                <td>${item.description}</td>
                <td>${item.address}</td>
                <td>${item.date}</td>
                <td>${item.monumentView}</td>
                <td>${item.registryNumber}</td>
                <td><button type="button" class="delete" data-id="${item._id}">X</button></td>
                <td><button type="button" class="edit" data-id="${item._id}">E</button></td>
            `
        }

        function addMonument(item) {
            const tr = document.createElement('tr')
            tr.id = item._id
            tr.innerHTML = monumentTemplate(item)

            table.appendChild(tr)
        }

        function getValue(id) {
            return document.getElementById(id).value;
        }

        function setValue(id, str) {
            document.getElementById(id).value = str
        }

        function toggleButtonText(isEditState)  {
            const text = form.querySelector('button[type="submit"]').firstChild;
            text.data = isEditState ? "Update" : "Add";
        }

        function createMonument(params) {
            fetch('/api/monuments', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(params)
            })
                .then(function (response) {
                    if (!response.ok) {
                        throw response
                    }
                    return response.json()
                })
                .then(function (monument) {
                    addMonument(monument)
                    console.log('Success!')
                })
                .catch(function (response) {
                    response.json()
                        .then(function (err) {
                            console.error(err.message)
                        })
                });
        }

        function updateMonument(params, id) {
            fetch(`api/monuments/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(params)
            })
                .then(function (response) {
                    if (!response.ok) {
                        throw response;
                    }
                })
                .then(function () {
                    document.getElementById(id).innerHTML = monumentTemplate(params)
                    console.log('Success!')
                })
                .catch(function (response) {
                    response.json()
                        .then(function (err) {
                            console.error(err.message)
                        })
                });
        }

        function onEventSubmit(evt) {
            evt.preventDefault();

            const body = {
                name: getValue('name'),
                description: getValue('description'),
                address: getValue('address'),
                date: getValue('date'),
                monumentView: getValue('monumentView'),
                registryNumber: getValue('registryNumber')
            }

            if (editingItem) {
                updateMonument(body, editingItem)
            } else {
                createMonument(body)
            }

            resetForm()
        }

        function resetForm() {
            setValue('name', '')
            setValue('description', '')
            setValue('address', '')
            setValue('date', null)
            setValue('monumentView', '')
            setValue('registryNumber', '')

            editingItem = null
            toggleButtonText(editingItem)
        }

        function deleteItem(id) {
            fetch(`api/monuments/${id}`, {
                method: 'DELETE',
            })
                .then(function (response) {
                    if (!response.ok) {
                        throw response;
                    }
                })
                .then(function () {
                    table.removeChild(document.getElementById(id))
                })
                .catch(function (response) {
                    response.json()
                        .then(function (err) {
                            console.error(err.message)
                        })
                });
        }

        function editItem(id) {
            fetch(`api/monuments/${id}`, {
                method: 'GET',
            })
                .then(function (response) {
                    if (!response.ok) {
                        throw response
                    }
                    return response.json()
                })
                .then(function (item) {
                    setValue('name', item.name)
                    setValue('description', item.description)
                    setValue('address', item.address)
                    setValue('date', item.date)
                    setValue('monumentView', item.monumentView)
                    setValue('registryNumber', item.registryNumber)

                    editingItem = item._id
                    toggleButtonText(editingItem)
                })
                .catch(function (response) {
                    response.json()
                        .then(function (err) {
                            console.error(err.message)
                        })
                });
        }
    })();
</script>

</html>
